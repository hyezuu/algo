//
// Source code recreated from a .class file by IntelliJ IDEA
// (powered by FernFlower decompiler)
//

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Set;

public class Main {
    public Main() {
    }

    public String solution(String str1, String str2) {
        Map<Character, Integer> map1 = new LinkedHashMap();
        Map<Character, Integer> map2 = new LinkedHashMap();

        for(int i = 0; i < str1.length(); ++i) {
            map1.put(str1.charAt(i), (Integer)map1.getOrDefault(str1.charAt(i), 0) + 1);
            map2.put(str2.charAt(i), (Integer)map2.getOrDefault(str2.charAt(i), 0) + 1);
        }

        Set<Character> keys = map1.keySet();
        if (map1.size() == map2.size()) {
            Iterator var6 = keys.iterator();

            char c;
            do {
                if (!var6.hasNext()) {
                    return "YES";
                }

                c = (Character)var6.next();
            } while(((Integer)map1.get(c)).equals(map2.get(c)));

            return "NO";
        } else {
            return "NO";
        }
    }

    public static void main(String[] args) throws Exception {
        Main T = new Main();
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        String str1 = br.readLine();
        String str2 = br.readLine();
        bw.write(T.solution(str1, str2));
        bw.flush();
    }
}
