import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.*;
//코드는 더럽지만 왠지모르게 빠르다
public class Main {

    public String solution(String str1, String str2) {
        Map<Character,Integer> map1 = new LinkedHashMap<>();
        Map<Character,Integer> map2 = new LinkedHashMap<>();

        for(int i=0; i<str1.length(); i++){
            map1.put(str1.charAt(i),map1.getOrDefault(str1.charAt(i),0)+1);
            map2.put(str2.charAt(i),map2.getOrDefault(str2.charAt(i),0)+1);
        }
        Set<Character> keys = map1.keySet();
        if(map1.size()==map2.size()){
            for(char c : keys){
                if(!map1.get(c).equals(map2.get(c))){
                    return "NO";
                }
            }
        }
        else return "NO";
        return "YES";
    }

    public static void main(String[] args) throws Exception {
        Main T = new Main();
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        String str1 = br.readLine();
        String str2 = br.readLine();
        bw.write(T.solution(str1, str2));
        bw.flush();
    }
}
//import java.io.BufferedReader;
  import java.io.BufferedWriter;
  import java.io.InputStreamReader;
  import java.io.OutputStreamWriter;
  import java.util.*;

  public class Main {

      public String solution(String str1, String str2) {
          Map<Character,Integer> map1 = new HashMap<>();
          Map<Character,Integer> map2 = new HashMap<>();

          for(int i=0; i<str1.length(); i++){
              map1.put(str1.charAt(i),map1.getOrDefault(str1.charAt(i),0)+1);
              map2.put(str2.charAt(i),map2.getOrDefault(str2.charAt(i),0)+1);
          }
          if(map1.size()==map2.size()){
              for(char key : map1.keySet()){
                  if(!map1.get(key).equals(map2.get(key))){
                      return "NO";
                  }
              }
          }
          else return "NO";
          return "YES";
      }

      public static void main(String[] args) throws Exception {
          Main T = new Main();
          BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
          BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
          String str1 = br.readLine();
          String str2 = br.readLine();
          bw.write(T.solution(str1, str2));
          bw.flush();
      }
  }
//다른풀이
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.*;

public class Main {

    public String solution(String str1, String str2) {
        Map<Character, Integer> map = new HashMap<>();

        for (int i = 0; i < str1.length(); i++) {
            map.put(str1.charAt(i), map.getOrDefault(str1.charAt(i), 0) + 1);
            map.put(str2.charAt(i), map.getOrDefault(str2.charAt(i), 0) - 1);
        }

        for (char key : map.keySet()) {
            if (map.get(key)!=0) {
                return "NO";
            }
        }
        return "YES";
    }

    public static void main(String[] args) throws Exception {
        Main T = new Main();
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        String str1 = br.readLine();
        String str2 = br.readLine();
        bw.write(T.solution(str1, str2));
        bw.flush();
    }
}
//update
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.*;

public class Main {

    public String solution(String str1, String str2) {
        Map<Character, Integer> map = new HashMap<>();

        for (int i = 0; i < str1.length(); i++) {
            map.put(str1.charAt(i), map.getOrDefault(str1.charAt(i), 0) + 1);
        }
        for(char c :str2.toCharArray()){
            if(!map.containsKey(c)) return "NO";
            else map.put(c, map.get(c) - 1);
            if(map.get(c)<0) return "NO";
        }

        return "YES";
    }

    public static void main(String[] args) throws Exception {
        Main T = new Main();
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        String str1 = br.readLine();
        String str2 = br.readLine();
        bw.write(T.solution(str1, str2));
        bw.flush();
    }
}
//
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.*;

public class Main {

    public String solution(String str1, String str2) {
        Map<Character, Integer> map = new HashMap<>();

        for (int i = 0; i < str1.length(); i++) {
            map.put(str1.charAt(i), map.getOrDefault(str1.charAt(i), 0) + 1);
        }
        for(char c :str2.toCharArray()){
            if(map.getOrDefault(c, 0)==0){
                return "NO";
            }
            else map.put(c,map.get(c)-1);
        }

        return "YES";
    }

    public static void main(String[] args) throws Exception {
        Main T = new Main();
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        String str1 = br.readLine();
        String str2 = br.readLine();
        bw.write(T.solution(str1, str2));
        bw.flush();
    }
}
//ref
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.*;

public class Main {

    public String solution(String s1, String s2) {
        String answer = "YES";
        HashMap<Character, Integer> map = new HashMap<>();
        for (char x : s1.toCharArray()) {
            map.put(x, map.getOrDefault(x, 0) + 1);
        }
        for (char x : s2.toCharArray()) {
            if(!map.containsKey(x)||map.get(x)==0) return "NO";
            map.put(x, map.get(x)-1);
        }
        return answer;
    }

    public static void main(String[] args) throws Exception {
        Main T = new Main();
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        String s1 = br.readLine();
        String s2 = br.readLine();
        bw.write(T.solution(s1, s2));
        bw.flush();
    }
}
