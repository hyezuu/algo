import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.*;
//map.equals
public class Main {

    public String solution(String str, String str1) {
        HashMap<Character, Integer> map1 = new HashMap<>();
        HashMap<Character, Integer> map = new HashMap<>();
        char[] arr = str.toCharArray();
        int lt =0, cnt=0;
        for(char c : str1.toCharArray()){
            map1.put(c ,map1.getOrDefault(c,0)+1);
        }
        for(int rt =0; rt<str.length(); rt++){
            map.put(arr[rt],map.getOrDefault(arr[rt],0)+1);
            if(rt-lt+1==str1.length()){
                if(map1.equals(map)){
                    cnt++;
                }
                map.put(arr[lt],map.get(arr[lt])-1);
                if(map.get(arr[lt])==0) map.remove(arr[lt]);
                lt++;
            }
        }
        return cnt+"";
    }

    public static void main(String[] args) throws Exception {
        Main T = new Main();
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        String str = br.readLine();
        String str1 = br.readLine();
        bw.write(T.solution(str, str1));
        bw.flush();
    }
}
//설명듣고 풀어본거
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.*;

public class Main {

    public String solution(String a, String b) {
        HashMap<Character, Integer> bm = new HashMap<>();
        HashMap<Character, Integer> am = new HashMap<>();
        char[] arr = a.toCharArray();
        int lt =0, cnt=0;
        for(char c : b.toCharArray()){
            bm.put(c ,bm.getOrDefault(c,0)+1);
        }
        for(int i =0; i<b.length()-1; i++){
            am.put(arr[i],am.getOrDefault(arr[i],0)+1);
        }
        for(int rt = b.length()-1; rt<a.length(); rt++){
            am.put(arr[rt], am.getOrDefault(arr[rt],0)+1);
            if(am.equals(bm)){
                cnt++;
            }
            if(am.get(arr[lt])>1){
                am.put(arr[lt], am.get(arr[lt])-1);
            }
            else am.remove(arr[lt]);
            lt++;
        }
        return cnt+"";
    }

    public static void main(String[] args) throws Exception {
        Main T = new Main();
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        String a = br.readLine();
        String b = br.readLine();
        bw.write(T.solution(a, b));
        bw.flush();
    }
}
//ref
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.*;

public class Main {

    public String solution(String a, String b) {
        HashMap<Character, Integer> bm = new HashMap<>();
        HashMap<Character, Integer> am = new HashMap<>();
        for (char x : b.toCharArray()) bm.put(x, bm.getOrDefault(x, 0) + 1);
        int lt = 0, cnt = 0, len = b.length() - 1;
        for (int i = 0; i < len; i++) {
            am.put(a.charAt(i), am.getOrDefault(a.charAt(i), 0) + 1);
        }
        for (int rt = len; rt < a.length(); rt++) {
            am.put(a.charAt(rt), am.getOrDefault(a.charAt(rt), 0) + 1);
            if (am.equals(bm)) cnt++;
            am.put(a.charAt(lt), am.get(a.charAt(lt)) - 1);
            if(am.get(a.charAt(lt))==0) am.remove(a.charAt(lt));
            lt++;
        }
        return cnt + "";
    }

    public static void main(String[] args) throws Exception {
        Main T = new Main();
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        String a = br.readLine();
        String b = br.readLine();
        bw.write(T.solution(a, b));
        bw.flush();
    }
}