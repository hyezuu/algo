import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

public class Main {

    public String solution(int n, int m, int[][] arr) {
        int cnt = 0;
        int answer = 0;
        int[][] mt = new int[n * (n - 1)][2];
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n; j++) {
                if (i != j) {
                    mt[cnt][0] = i;
                    mt[cnt][1] = j;
                    cnt++;
                }
            }
        }
        for (int[] tt : mt) {
            boolean isMento = true;
            for (int i = 0; i < m; i++) {
                for (int j = 0; j < n; j++) {
                    if (arr[i][j] == tt[0]) {
                        for (int l = 0; l < n; l++) {
                            if (arr[i][l] == tt[1]) {
                                if (j > l) {
                                    isMento = false;
                                    break;
                                }
                            }
                        }
                    }
                }
            }
            if (isMento) answer++;
        }
        return answer + "";
    }

    public static void main(String[] args) throws Exception {
        Main T = new Main();
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        StringTokenizer nums = new StringTokenizer(br.readLine());
        int n = Integer.parseInt(nums.nextToken());
        int m = Integer.parseInt(nums.nextToken());
        int[][] arr = new int[m][n];

        for (int i = 0; i < m; i++) {
            StringTokenizer stk = new StringTokenizer(br.readLine());
            for (int j = 0; j < n; j++) {
                arr[i][j] = Integer.parseInt(stk.nextToken());
            }
        }
        bw.write(T.solution(n, m, arr));
        bw.flush();
    }
}
//사중..포문